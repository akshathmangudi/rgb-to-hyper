% Step 1: Define the local ZIP file path and output folder
outputZip = 'shared_file.zip';  % Local ZIP file path
outputFolder = 'hsi_images';  % Folder to save unzipped files

% Create output folder if it doesn't exist
if ~exist(outputFolder, 'dir')
    mkdir(outputFolder);
end

% Unzip the ZIP file if it hasn't been unzipped
try
    unzip(outputZip, outputFolder);
    disp('Unzipping complete.');
catch ME
    error('Error unzipping the file: %s', ME.message);
end

% Step 2: Create a new folder for TIFF files
tiffOutputFolder = fullfile(outputFolder, 'tiff_images');  % New folder for TIFF files
if ~exist(tiffOutputFolder, 'dir')
    mkdir(tiffOutputFolder);
end

% Step 3: Process .mat files (all files)
matFiles = dir(fullfile(outputFolder, '*.mat'));  % List of .mat files
numFilesToProcess = length(matFiles);  % Total number of .mat files

% Check if there are any .mat files to process
if numFilesToProcess == 0
    error('No .mat files found in the specified directory.');
end

for k = 1:numFilesToProcess
    % Load each .mat file
    matFileName = matFiles(k).name;
    matFilePath = fullfile(outputFolder, matFileName);
    disp(['Processing ', matFileName]);

    % Load the .mat file content
    try
        matData = load(matFilePath);
    catch ME
        disp(['Error loading ', matFileName, ': ', ME.message]);
        continue;
    end

    % Replace 'HSI_data_key' with the actual key in your .mat structure
    hsiDataKey = 'HSI_data_key';  % Adjust this to the actual key name
    if isfield(matData, hsiDataKey)
        hsi = matData.(hsiDataKey);  % Access the HSI data
    else
        disp(['Key "', hsiDataKey, '" not found in ', matFileName]);
        continue;
    end

    % Assuming hsi is a 3D array (height x width x bands)
    % Normalize the entire 3D cube to the range [0, 255]
    hsi = (hsi - min(hsi(:))) / (max(hsi(:)) - min(hsi(:))) * 255;
    hsi = uint8(hsi);  % Convert to 8-bit

    % Save the 3D image cube as a multi-layered TIFF file
    imageName = sprintf('%s_3D.tiff', matFileName(1:end-4));
    imageSavePath = fullfile(tiffOutputFolder, imageName);

    % Save as a multi-layered TIFF file (preserves 3D structure)
    try
        imwrite(hsi(:, :, 1), imageSavePath);  % Save first layer
        for i = 2:size(hsi, 3)
            imwrite(hsi(:, :, i), imageSavePath, 'WriteMode', 'append');  % Append additional layers
        end
        disp(['Saved 3D image: ', imageSavePath]);
    catch ME
        disp(['Error saving 3D image for ', matFileName, ': ', ME.message]);
    end
end

disp('Processing complete.');
